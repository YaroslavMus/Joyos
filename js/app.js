jQuery(document).ready(function ($) {
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞—Ç—ã
    function getCurrentDate() {
        const currentDate = new Date();
        const monthNames = ["—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"];
        const dayNames = ["–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", "–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–≤—Ç–æ—Ä–Ω–∏–∫", "—Å—Ä–µ–¥–∞", "—á–µ—Ç–≤–µ—Ä–≥", "–ø—è—Ç–Ω–∏—Ü–∞", "—Å—É–±–±–æ—Ç–∞"];
        const day = currentDate.getDate();
        const monthIndex = currentDate.getMonth();
        const year = currentDate.getFullYear();
        const dayOfWeekIndex = currentDate.getDay();
        const formattedDate = day + " " + monthNames[monthIndex] + " " + year;
        const dayOfWeek = dayNames[dayOfWeekIndex];
        const capitalizedDay = dayOfWeek.charAt(0).toUpperCase() + dayOfWeek.slice(1);
        return { date: formattedDate, dayOfWeek: capitalizedDay };
    }

    // HTML –¢–µ–∫—Å—Ç –±–ª–æ–∫–∞
    function addBlockText(title, text) {
        return (`
        <div class="content__card text-block">
            <div class="content__card-title">
                <span id="editableSpan">${title ? title : '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫'}</span>
            </div>
            <div class="content__card-list">
                <div class="content__card-text" >${text ? text : '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç'}</div>
            </div>
        </div>
        `)
    }

    // HTML –ü–∞–ª–∑—É–Ω–æ–∫ –±–ª–æ–∫–∞
    function addBlockRange(title) {
        return (`
        <div class="content__card range-block">
            <div class="content__card-title">
                <span id="editableSpan">${title ? title : '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫'}</span>
            </div>
            <label class="content__card-label">
                <input class="styled-slider slider-progress" type="range" min="0" max="10">
                <span>0</span>
            </label>
        </div>
        `)
    }

    // HTML –ß–µ–∫–±–æ–∫—Å –±–ª–æ–∫–∞
    function addBlockCheckbox(title) {
        return (`
        <div class="content__card block-checkbox">
            <div class="content__card-title"><span id="editableSpan">${title ? title : '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫'}</span></div>
            <div class="content__card-list"></div>
            <div class="content__card-time">
                <div class="time-block" data-time="0">0</div>
                <div class="time-block" data-time="5 –º">5 —á</div>
                <div class="time-block" data-time="15 –º">15 —á</div>
                <div class="time-block" data-time="30 –º">30 —á</div>
                <div class="time-block" data-time="1 —á">1 —á</div>
                <div class="time-block" data-time="1,5 —á">1,5 —á</div>
                <div class="time-block" data-time="2 —á">2 —á</div>
            </div>
            <label class="content__card-label">
                <span class="button-plus"></span>
                <input type="text">
            </label>
        </div>
        `)
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π 
    function addNewCheckbox(input) {
        const value = input.val().trim();
        if (value === '') {
            return;
        } else {
            const cardList = input.closest('.content__card').find('.content__card-list');
            const activeTimeBlock = $(".content__card-time > .time-block.active");
            let time = '';
            if (activeTimeBlock.length) {
                time = activeTimeBlock.text();

                cardList.append(`
                    <div class="content__card-checkbox">
                        <span></span>
                        <p>${value}</p>
                        <div class="time-block" data-time="${time}">${time}</div>
                    </div>
                `);
                input.val('');
            } else {
                cardList.append(`
                    <div class="content__card-checkbox">
                        <span></span>
                        <p>${value}</p>
                        <div class="time-block" data-time="0">0</div>
                    </div>
                `);
            }
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π span –∏–∑ InputRange
    function getInputRange() {
        $('input[type="range"].slider-progress').each(function () {
            $(this).siblings('span').text($(this).val());
        });
    }
    // –ü–æ–ª–∑—É–Ω–æ–∫ 
    function inputRange() {
        $('input[type="range"].slider-progress').each(function () {
            var range = $(this);
            range.css('--value', range.val());
            range.css('--min', range.attr('min') === '' ? '0' : range.attr('min'));
            range.css('--max', range.attr('max') === '' ? '100' : range.attr('max'));

            range.on('input', function () {
                range.siblings('span').text(range.val())
            });
        });
    }
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ "Enter" –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –±–ª–æ–∫–∞ —á–µ–∫–±–æ–∫—Å–∞
    function handleCheckboxInputKeypress(event) {
        if (event.which === 13) {
            event.preventDefault();
            const input = $(this);
            const timeBlocks = $(this).closest('.content__card').find('.content__card-time .time-block');
            let hasActiveBlock = false;

            // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π –±–ª–æ–∫ –≤—Ä–µ–º–µ–Ω–∏
            timeBlocks.each(function () {
                if ($(this).hasClass('active')) {
                    hasActiveBlock = true;
                    return false;
                }
            });
            addNewCheckbox(input);
            input.val('');
            updateEventHandlers();
        }
    }
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ "–ü–ª—é—Å" –≤ –±–ª–æ–∫–µ —á–µ–∫–±–æ–∫—Å–∞
    function handleCheckboxButtonClick() {
        const input = $(this).siblings('input');
        const timeBlocks = $(this).closest('.content__card').find('.content__card-time .time-block');
        let hasActiveBlock = false;

        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—ã–π –±–ª–æ–∫ –≤—Ä–µ–º–µ–Ω–∏
        timeBlocks.each(function () {
            if ($(this).hasClass('active')) {
                hasActiveBlock = true;
                return false;
            }
        });
        addNewCheckbox(input);
        input.val('');
        updateEventHandlers();
    }
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    function updateEventHandlers() {
        $('.button-plus').off('click').on('click', handleCheckboxButtonClick);
        $('input[type="text"]').off('keypress').on('keypress', handleCheckboxInputKeypress);
        $('.button-plus').closest('.content__card').find('.content__card-time .time-block').removeClass('active');
    }
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞—è –ø–æ –∫–ª–∏–∫—É –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–π 
    $(document).on('click', '.card', function () {
        // $.ajax({
        //     url: '/index.php',
        //     method: 'post',
        //     data: {
        //         action,
        //         nonce,
        //     },
        //     success: function (response) {
        //     }
        // });
        const currentDateInfo = getCurrentDate();
        getInputRange();
        inputRange();
        $('.container__modal__title h3').text(currentDateInfo.date);
        $('.modal__title-day').text(currentDateInfo.dayOfWeek);
        $('.wrapper').addClass('stop');
        $('.modal__block').addClass('open');
    });

    // =====================================================================================
    // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
    $('.header__container .green-button').click(function () {
        const currentDateInfo = getCurrentDate();
        $('.container__modal__content').empty();
        $('.container__modal__title h3').text(currentDateInfo.date);
        $('.modal__title-day').text(currentDateInfo.dayOfWeek);
        $('.container__modal__content').append(`
        <div class="content__card text-block-constant">
            <div class="content__card-title">
                –ú–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            </div>
            <div class="content__card-emotion">
                <button>
                    <img src="./img/üò≠.png" alt="logo" loading="lazy">
                </button>
                <button>
                    <img src="./img/üòê.png" alt="logo" loading="lazy">
                </button>
                <button>
                    <img src="./img/üôÇ.png" alt="logo" loading="lazy">
                </button>
                <button>
                    <img src="./img/üòÅ.png" alt="logo" loading="lazy">
                </button>
                <button>
                    <img src="./img/üòÇ.png" alt="logo" loading="lazy">
                </button>
            </div>
            <div class="content__card-list">
                <div class="content__card-text" id='editableText'>–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫</div>
            </div>
        </div>
        `);
        $(document).ready(function () {
            $('.content__card-emotion button').click(function () {
                $(".content__card-emotion button").removeClass('active');
                $(this).addClass('active')
            })
            $('.content__card-text').click(function () {
                if ($(this).text() === "–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫") {
                    $(this).text('');
                }
                $(this).addClass('editable').attr('contenteditable', 'true').focus();
            });

            $('.content__card-text').blur(function () {
                if ($(this).text() === "") {
                    $(this).text("–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫");
                }
                $(this).removeClass('editable').removeAttr('contenteditable');
            });
        });
        $('.modal__block').addClass('open');
    });

    // ====================================–¢–µ–∫—Å—Ç=================================================
    // –°–æ–∑–¥–∞–Ω–∏–µ –¢–µ–∫—Å—Ç –±–ª–æ–∫–∞
    $('#buttonText').click(function () {
        const newBlock = addBlockText();
        $('.container__modal__content').append(newBlock);

        $(newBlock).find('.content__card-text').addClass('editable').attr('contenteditable', 'true').focus();

        // –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–ª—é—Å –≤ –Ω–æ–≤–æ–º –±–ª–æ–∫–µ
        $('.content__card-text').click(function () {
            console.log($(this).text());
            if ($(this).text() === "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç") {
                $(this).text('');
            }
            $(this).addClass('editable').attr('contenteditable', 'true').focus();
        });

        $('.content__card-text').blur(function () {
            const newText = $(this).text().trim();
            if (newText === "") {
                $(this).text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç");
            }
            $(this).removeClass('editable').removeAttr('contenteditable');
        });
    });

    // ====================================–î–∏–∞–ø–∞–∑–æ–Ω=================================================
    // –°–æ–∑–¥–∞–Ω–∏–µ –î–∏–∞–ø–∞–∑–æ–Ω –±–ª–æ–∫–∞
    getInputRange();

    $('#buttonRange').click(function () {
        $('.container__modal__content').append(addBlockRange());
        inputRange();
        getInputRange();
    });

    $('.container__modal__content').on('input', 'input[type="range"].slider-progress', function () {
        inputRange();
        getInputRange();
    });
    // ====================================–ß–µ–∫–±–æ–∫—Å=================================================

    // –°–æ–∑–¥–∞–Ω–∏–µ –ß–µ–∫–±–æ–∫—Å –±–ª–æ–∫–∞
    $('#buttonCheckbox').click(function () {
        $('.container__modal__content').append(addBlockCheckbox());
        updateEventHandlers();
    });
    $(document).on('click', '.content__card-label > input', function () {
        $(this).closest('.content__card').find('.content__card-time').addClass('active');
    })
    $(document).on('blur', '.content__card-label > input', function () {
        if ($(this).val() === '') {
            $(this).closest('.content__card').find('.content__card-time').removeClass('active');
        }
    })
    $('.container__modal__content').on('click', '.content__card-checkbox > span', function () {
        $(this).closest('.content__card-checkbox').toggleClass('close');
    });
    $(document).on('click', '.content__card-time div', function () {
        $('.content__card-time div').removeClass('error');
        $('.content__card-time div').removeClass('active');
        $(this).addClass("active");
    });

    updateEventHandlers();

    // ====================================–§–æ—Ç–æ=================================================
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ –±–ª–æ–∫–∞
    $('#photo').on('change', function (event) {
        const files = event.target.files;
        if (files.length > 0) {
            const reader = new FileReader();
            reader.onload = function (event) {
                const imageDataUrl = event.target.result;
                $('.container__modal__content').prepend(`
                <div class="content__card photo-block">
                    <img src="${imageDataUrl}" alt="" width="330" height="140" loading="lazy">
                </div>
                `);
            };
            reader.readAsDataURL(files[0]);
        }
    });



    // ====================================–ê–Ω–∏–º–∞—Ü–∏—è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏=================================================
    $(document).ready(function () {
        $(document).click(function () {
            $('.login__logo').addClass('start');
            $('.go-register').text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è').fadeIn(500);
        })
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        $(document).on('click', ".button-authorization", function () {
            $('.login__logo').addClass('authorization');
            $(this).addClass('authorization_submit');
            $('.button-register').addClass('register_submit');
        })
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫—É "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"
        $(document).on('click', ".go-register", function () {
            $('.login__wrapper').addClass("register-block");
        })
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Å—Å—ã–ª–∫—É "–ù–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
        $(document).on('click', ".no-register", function () {
            $('.login__wrapper').removeClass("register-block");
        })
    });



    // ====================================Ajax –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –í—Ö–æ–¥=================================================
    $(document).on('click', ".register_submit, .authorization_submit", function (e) {
        e.preventDefault();
        const email = $('.login__logo__form input[type="email"]').val();
        const password = $('.login__logo__form input[type="password"]').val();
        const action = $(this).hasClass('register_submit') ? 'register' : 'authorize';
        const errorMessage = $(this).hasClass('register_submit') ? '–û—à–∏–±–∫–∞' : '–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å';

        $.ajax({
            url: '/index.php',
            method: 'post',
            data: {
                action,
                nonce,
                email,
                password,
            },
            success: function (response) {
                if (response['result'] == 'error') {
                    $('.error-block').addClass('active').text(errorMessage);
                }
            }
        });
    });


    // ====================================–°–≤–∞–π–ø –±–ª–æ–∫–∞ –≤–Ω–∏–∑=================================================
    $(document).ready(function () {
        const hammertime = new Hammer($('.cursor-close')[0]);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        const myOptions = {};
        hammertime.get('pan').set(myOptions);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è —Å–≤–∞–π–ø–∞
        hammertime.on('pan', function (ev) {
            if (ev.direction === Hammer.DIRECTION_DOWN && ev.distance > 50) {
                // $.ajax({
                //     url: '/index.php',
                //     method: 'post',
                //     data: {
                //         action,
                //         nonce,
                //     },
                //     success: function (response) {
                //     }
                // });
                $('.modal__block').removeClass('open');
            }
        });
    })
    //–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ó–∞–≥–æ–ª–æ–≤–æ–∫ 
    $(document).on('click', '#editableSpan', function () {
        if ($(this).text() === "–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫") {
            $(this).text('');
        }
        $(this).addClass('editable').attr('contenteditable', 'true').focus();
    });
    $(document).on('blur', '#editableSpan', function () {
        const newText = $(this).text().trim();
        if (newText === "") {
            $(this).text("–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫");
        }
        $(this).removeClass('editable').removeAttr('contenteditable');
    });

    //–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–µ–∫—Å—Ç–∞ 
    $(document).on('click', '.block-checkbox .content__card-checkbox p ', function () {
        const item = $(this)
        $(this).closest('.content__card').find('.content__card-time').addClass('active');
        $(this).closest('.content__card').find('.content__card-time .time-block').click(function () {
            const time = $(this).data("time");
            $(item).siblings('.time-block').attr("data-time", time).text(time);
            $('.content__card-time .time-block').removeClass('active');
        })
        $(this).addClass('editable').attr('contenteditable', 'true').focus();
    });
    $(document).on('click', ".block-checkbox .content__card-checkbox .time-block", function () {
        $('.content__card-time .time-block').removeClass('active');
        const item = $(this)
        $(this).closest('.content__card').find('.content__card-time').addClass('active');
        $(this).closest('.content__card').find('.content__card-time .time-block').click(function () {
            const time = $(this).data("time");
            $(item).attr("data-time", time).text(time);
            $(item).closest('.content__card').find('.content__card-time').removeClass('active');
        })

    })
    $(document).on('blur', '.block-checkbox .content__card-checkbox p', function () {
        $('.content__card-time .time-block').removeClass('active');
        $(this).closest('.content__card').find('.content__card-time').removeClass('active');
        $(this).removeClass('editable').removeAttr('contenteditable');
    });
});




